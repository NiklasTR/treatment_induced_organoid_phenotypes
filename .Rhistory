group_by(drug, line, concentration) %>%
sample_n(400, replace = TRUE) %>% ungroup() # adjust based on pan-line vs.
plot_df <- center_df %>%
nest(-line, -drug) %>%
mutate(plot = purrr::map(data, ~ create_princurve_trace(.x)))
gg_tram_traj <-
ggplot() +
geom_point_rast(aes(v1, v2), data = umap_tidy %>% sample_frac(0.01) %>% dplyr::select(-drug), alpha = 1, size = 0.35, color = "#f1f1f1") +
geom_point(data = plot_df %>% unnest(data),
aes(color = line, v1, v2), alpha = 0.5, size = 0.35) +
geom_path(data = plot_df %>% mutate(plot_trace = purrr::map(plot, ~ .x$fit %>% .[, 50])) %>% unnest(plot_trace),
aes(v1, v2, group = paste0(drug, line), color = line), size = 1.5,
arrow = arrow(angle = 10, ends = "last", type = "closed", length = unit(0.15, "inches")))+
scale_color_brewer(type = "qual", palette = "Set2") +
theme_cowplot() +
labs(x = "UMAP 1",
y = "UMAP 2")+
theme(legend.position = "bottom") +
facet_wrap(~ drug)
set.seed(123)
drug_order <- c("Trametinib")
center_df <- umap_tidy %>%
filter(drug %in% drug_order) %>%
filter(line %in% c("D027T01", "D019T01")) %>%
mutate(drug = factor(drug, levels =drug_order)) %>%
arrange((drug)) %>%
group_by(drug, line, concentration) %>%
sample_n(400, replace = TRUE) %>% ungroup() # adjust based on pan-line vs.
plot_df <- center_df %>%
nest(-line, -drug) %>%
mutate(plot = purrr::map(data, ~ create_princurve_trace(.x)))
gg_tram_traj <-
ggplot() +
geom_point_rast(aes(v1, v2), data = umap_tidy %>% sample_frac(0.01) %>% dplyr::select(-drug), alpha = 1, size = 0.35, color = "#f1f1f1") +
geom_point(data = plot_df %>% unnest(data),
aes(color = line, v1, v2), alpha = 0.5, size = 0.35) +
geom_path(data = plot_df %>% mutate(plot_trace = purrr::map(plot, ~ .x$fit %>% .[, 50])) %>% unnest(plot_trace),
aes(v1, v2, group = paste0(drug, line), color = line), size = 1.5,
arrow = arrow(angle = 10, ends = "last", type = "closed", length = unit(0.15, "inches")))+
scale_color_brewer(type = "qual", palette = "Set2") +
theme_cowplot() +
labs(x = "UMAP 1",
y = "UMAP 2")+
theme(legend.position = "bottom") +
facet_wrap(~ drug)
gg_tram_traj <-
ggplot() +
geom_point_rast(aes(v1, v2), data = umap_tidy %>% sample_frac(0.01) %>% dplyr::select(-drug), alpha = 1, size = 0.35, color = "#f1f1f1") +
geom_point(data = plot_df %>% unnest(data),
aes(color = line, v1, v2), alpha = 0.5, size = 0.35) +
geom_path(data = plot_df %>% mutate(plot_trace = purrr::map(plot, ~ .x$fit %>% .[,])) %>% unnest(plot_trace),
aes(v1, v2, group = paste0(drug, line), color = line), size = 1.5,
arrow = arrow(angle = 10, ends = "last", type = "closed", length = unit(0.15, "inches")))+
scale_color_brewer(type = "qual", palette = "Set2") +
theme_cowplot() +
labs(x = "UMAP 1",
y = "UMAP 2")+
theme(legend.position = "bottom") +
facet_wrap(~ drug)
gg_tram_traj
gg_tram_traj <-
ggplot() +
geom_point_rast(aes(v1, v2), data = umap_tidy %>% sample_frac(0.01) %>% dplyr::select(-drug), alpha = 1, size = 0.35, color = "#f1f1f1") +
geom_point(data = plot_df %>% unnest(data),
aes(color = line, v1, v2), alpha = 0.5, size = 0.35) +
geom_path(data = plot_df %>% mutate(plot_trace = purrr::map(plot, ~ .x$fit %>% .[1:50,])) %>% unnest(plot_trace),
aes(v1, v2, group = paste0(drug, line), color = line), size = 1.5,
arrow = arrow(angle = 10, ends = "last", type = "closed", length = unit(0.15, "inches")))+
scale_color_brewer(type = "qual", palette = "Set2") +
theme_cowplot() +
labs(x = "UMAP 1",
y = "UMAP 2")+
theme(legend.position = "bottom") +
facet_wrap(~ drug)
gg_tram_traj + ggsave(paste0(PATH, "reports/figures/gg_tram_traj_D27_D19.pdf"), width = 4, height = 4)
gg_tram_traj <-
ggplot() +
geom_point_rast(aes(v1, v2), data = umap_tidy %>% sample_frac(0.01) %>% dplyr::select(-drug), alpha = 1, size = 0.35, color = "#f1f1f1") +
geom_point(data = plot_df %>% unnest(data),
aes(color = line, v1, v2), alpha = 0.5, size = 0.35) +
geom_path(data = plot_df %>% mutate(plot_trace = purrr::map(plot, ~ .x$fit %>% .[1:500,])) %>% unnest(plot_trace),
aes(v1, v2, group = paste0(drug, line), color = line), size = 1.5,
arrow = arrow(angle = 10, ends = "last", type = "closed", length = unit(0.15, "inches")))+
scale_color_brewer(type = "qual", palette = "Set2") +
theme_cowplot() +
labs(x = "UMAP 1",
y = "UMAP 2")+
theme(legend.position = "bottom") +
facet_wrap(~ drug)
gg_tram_traj
gg_tram_traj <-
ggplot() +
geom_point_rast(aes(v1, v2), data = umap_tidy %>% sample_frac(0.01) %>% dplyr::select(-drug), alpha = 1, size = 0.35, color = "#f1f1f1") +
geom_point(data = plot_df %>% unnest(data),
aes(color = line, v1, v2), alpha = 0.5, size = 0.35) +
geom_path(data = plot_df %>% mutate(plot_trace = purrr::map(plot, ~ .x$fit %>% .[1:1500,])) %>% unnest(plot_trace),
aes(v1, v2, group = paste0(drug, line), color = line), size = 1.5,
arrow = arrow(angle = 10, ends = "last", type = "closed", length = unit(0.15, "inches")))+
scale_color_brewer(type = "qual", palette = "Set2") +
theme_cowplot() +
labs(x = "UMAP 1",
y = "UMAP 2")+
theme(legend.position = "bottom") +
facet_wrap(~ drug)
gg_tram_traj
set.seed(123)
drug_order <- c("Trametinib")
center_df <- umap_tidy %>%
filter(drug %in% drug_order) %>%
filter(line %in% c("D027T01")) %>%
mutate(drug = factor(drug, levels =drug_order)) %>%
arrange((drug)) %>%
group_by(drug, line, concentration) %>%
sample_n(400, replace = TRUE) %>% ungroup() # adjust based on pan-line vs.
plot_df <- center_df %>%
nest(-line, -drug) %>%
mutate(plot = purrr::map(data, ~ create_princurve_trace(.x)))
gg_tram_traj <-
ggplot() +
geom_point_rast(aes(v1, v2), data = umap_tidy %>% sample_frac(0.01) %>% dplyr::select(-drug), alpha = 1, size = 0.35, color = "#f1f1f1") +
geom_point(data = plot_df %>% unnest(data),
aes(color = line, v1, v2), alpha = 0.5, size = 0.35) +
geom_path(data = plot_df %>% mutate(plot_trace = purrr::map(plot, ~ .x$fit %>% .[1:1500,])) %>% unnest(plot_trace),
aes(v1, v2, group = paste0(drug, line), color = line), size = 1.5,
arrow = arrow(angle = 10, ends = "last", type = "closed", length = unit(0.15, "inches")))+
scale_color_brewer(type = "qual", palette = "Set2") +
theme_cowplot() +
labs(x = "UMAP 1",
y = "UMAP 2")+
theme(legend.position = "bottom") +
facet_wrap(~ drug)
gg_tram_traj + ggsave(paste0(PATH, "reports/figures/gg_tram_traj_D27_D19.pdf"), width = 4, height = 4)
library(tidyverse)
library(monocle3)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(dplyr)
library(dplyr)
?read_rds
??read_rds
library(here)
here::here()
library(monocle3)
obj <- readRDS(obj_graph, paste0(PATH, "data/processed/PhenotypeSpectrum/louvain_absolute_all_drugs_", length_in))
length_in <- 1e-7
obj <- readRDS(paste0(PATH, "data/processed/PhenotypeSpectrum/louvain_absolute_all_drugs_", length_in))
plot_cells(obj)
plot_cells(obj)
plot_cells(obj)
plot_cells(obj)
# Chunk 1: setup
knitr::opts_chunk$set(echo = T, message = F, warning = F, results = 'hide')
# Chunk 2
library(limma)
library(clusterProfiler)
library(pheatmap)
library(reshape2)
library(tidyverse)
library(cowplot)
library(here)
# Chunk 3
filter <- dplyr::filter
select <- dplyr::select
rename <- dplyr::rename
# Chunk 4
theme_set(theme_cowplot())
# Chunk 5
load(here('data/gene_expression/promise_expr.rda'))
expr_mat <- promise_expr %>%
distinct(probe, line, date, expr) %>%
acast(probe ~ line + date, value.var = 'expr')
## generate heatmap annotation
anno <- promise_expr %>% distinct(line, date, batch) %>%
unite(id, line, date, remove = F) %>%
as.data.frame() %>% column_to_rownames('id') %>% select(-line)
expr_mat
dist(expr_mat)
dist(t(expr_mat))
as.matrix(dist(t(expr_mat)))
pheatmap(as.matrix(dist(t(expr_mat))), annotation_col = anno)
pheatmap(as.matrix(dist(t(expr_mat))))
dev.off()
dev.off()
## visualize distance matrix
pheatmap(as.matrix(dist(t(expr_mat))))
## visualize distance matrix
pheatmap(as.matrix(dist(t(expr_mat))),
annotation_col = anno)
rownames(anno)
colnames(as.matrix(dist(t(expr_mat))))
identical(sort(rownames(anno)), sort(colnames(as.matrix(dist(t(expr_mat))))))
## visualize distance matrix
pheatmap(as.matrix(dist(t(expr_mat))),
annotation_row = anno)
anno
## generate heatmap annotation
anno <- promise_expr %>% distinct(line, date, batch) %>%
unite(id, line, date, remove = F) %>%
mutate_all(as.factor) %>%
as.data.frame() %>% column_to_rownames('id') %>% select(-line)
## visualize distance matrix
pheatmap(as.matrix(dist(t(expr_mat))),
annotation_row = anno)
## annotate phenotype group
solid <- c('D004', 'D007', 'D010', 'D019', 'D020',
'D022', 'D046', 'D054', 'D055')
cystic <- c('D013', 'D018', 'D021', 'D027', 'D030')
promise_expr
promise_expr %>% filter(phenotype = ifelse(line %in% solid, 'solid', ifelse(line %in% cystic, 'cystic', 'other')))
promise_expr %>% mutate(phenotype = ifelse(line %in% solid, 'solid', ifelse(line %in% cystic, 'cystic', 'other')))
promise_expr %>% mutate(phenotype = ifelse(line %in% solid, 'solid', ifelse(line %in% cystic, 'cystic', 'other'))) %>% distinct(phenotype)
promise_expr %>% mutate(phenotype = ifelse(line %in% solid, 'solid', ifelse(line %in% cystic, 'cystic', 'other'))) %>% filter(phenotype == 'other')
promise_expr %>% mutate(phenotype = ifelse(line %in% solid, 'solid', ifelse(line %in% cystic, 'cystic', 'other'))) %>% filter(phenotype == 'other') %>% distinct(line)
## exclude lines 15 and 52 due to potential contamination
promise_expr <- promise_expr %>%
mutate(phenotype = ifelse(line %in% solid, 'solid',
ifelse(line %in% cystic, 'cystic', 'other'))) %>%
filter(phenotype != 'other')
## make expr matrix
expr_mat <- promise_expr %>%
distinct(probe, line, date, expr) %>%
acast(probe ~ line + date, value.var = 'expr')
## generate heatmap annotation
anno <- promise_expr %>% distinct(line, date, batch_large) %>%
unite(id, line, date) %>%
mutate_all(as.factor) %>%
as.data.frame() %>% column_to_rownames('id')
## visualize distance matrix
pheatmap(as.matrix(dist(t(expr_mat))),
annotation_row = anno)
## generate heatmap annotation
anno <- promise_expr %>%
distinct(line, date, batch_large, phenotype) %>%
unite(id, line, date) %>%
mutate_all(as.factor) %>%
as.data.frame() %>% column_to_rownames('id')
## visualize distance matrix
pheatmap(as.matrix(dist(t(expr_mat))),
annotation_row = anno)
order(apply(expr_mat, 1, sd), decreasing = T)[1:500,]
order(apply(expr_mat, 1, sd), decreasing = T)[1:500]
expr_mat[order(apply(expr_mat, 1, sd), decreasing = T)[1:500],]
pheatmap(expr_mat[order(apply(expr_mat, 1, sd), decreasing = T)[1:500],], annotation_col = anno)
promise_expr
promise_expr %>% filter(!(line == 'D021' & date == '2017-05-19'))
## exclude outlier
promise_expr <- promise_expr %>% filter(!(line == 'D021' & date == '2017-05-19'))
## make new expr matrix
expr_mat <- promise_expr %>%
distinct(probe, line, date, expr) %>%
acast(probe ~ line + date, value.var = 'expr')
promise_expr %>% distinct(line, date, phenotype)
promise_expr %>% distinct(line, date, phenotype) %>% unite(id, line, date)
promise_expr %>%
distinct(line, date, phenotype, remove = F) %>%
unite(id, line, date)
promise_expr %>%
distinct(line, date, phenotype, remove = F) %>%
unite(id, line, date)promise_expr %>%
distinct(line, date, phenotype) %>%
unite(id, line, date, remove = F)
promise_expr %>%
distinct(line, date, phenotype) %>%
unite(id, line, date, remove = F)
sample_anno <- promise_expr %>%
distinct(line, date, phenotype) %>%
unite(id, line, date, remove = F) %>%
arrange(line)
sample_anno
as.factor(sample_anno$line)
## model matrix
mm <- model.matrix(~phenotype, data = sample_anno)
## set technical replicate plots
blocks <- as.factor(sample_anno$line)
## compute within-block correlations
corfit <- duplicateCorrelation(expr_mat, mm, block = blocks)
## fit model and compute model coefficients
fit_phenotype <- lmFit(expr_mat, mm,
block = blocks,
cor= corfit$consensus.correlation)
fit_phenotype <- eBayes(fit_phenotype)
topTable(fit_phenotype)
coef(fit_phenotype)
topTable(fit_phenotype, coef = 'phenotypesolid')
topTable(fit_phenotype, coef = 'phenotypesolid', n = Inf)
topTable(fit_phenotype, coef = 'phenotypesolid', n = Inf) %>% as_tibble(rownames = 'probe')
topTable(fit_phenotype, coef = 'phenotypesolid', n = Inf) %>% as_tibble(rownames = 'probe')
promise_expr %>% distinct(probe, symbol)
promise_expr %>% distinct(probe, symbol) %>% group_by(probe) %>% slice(1) %>% ungroup()
## extract results and annotate gene symbols
probe_to_symbol <- promise_expr %>% distinct(probe, symbol) %>%
group_by(probe) %>% slice(1) %>% ungroup()
phenotype_res <- topTable(fit_phenotype, coef = 'phenotypesolid', n = Inf) %>%
as_tibble(rownames = 'probe') %>%
left_join(probe_to_symbol)
phenotype_res
sessionInfo()
phenotype_res
phenotype_res %>% ggplot(aes(P.Value)) + geom_histogram(bins = 50)
promise_expr
promise_expr %>% ggplot(aes(phneotype, expr, fill = line)) + stat_summary(fun = 'mean', geom = 'bar') + geom_point()
promise_expr %>% ggplot(aes(phenotype, expr, fill = line)) + stat_summary(fun = 'mean', geom = 'bar') + geom_point()
promise_expr %>% filter(symbol %in% phenotype_res$symbol[1:4]) %>% ggplot(aes(phenotype, expr, fill = line)) + stat_summary(fun = 'mean', geom = 'bar') + geom_point()
promise_expr %>% filter(probe %in% phenotype_res$probe[1:4]) %>% ggplot(aes(phenotype, expr, color = line)) + stat_summary(fun = 'mean', geom = 'bar') + geom_point() + facet_wrap(~symbol)
promise_expr %>% filter(probe %in% phenotype_res$probe[1:4]) %>% ggplot(aes(phenotype, expr)) + stat_summary(fun = 'mean', color = '#cccccc', geom = 'bar') + geom_point(aes(color = line)) + facet_wrap(~symbol + probe)
library(org.Hs.eg.db)
select <- dplyr::select
ranks
phenotype_res
## GO term enrichment (biological process)
probe_to_entrez <- promise_expr %>% distinct(probe, entrez) %>%
group_by(probe) %>% slice(1) %>% ungroup()
promise_expr
## GO term enrichment (biological process)
probe_to_entrez <- promise_expr %>% distinct(probe, entrez) %>%
group_by(probe) %>% slice(1) %>% ungroup()
promise_expr %>% distinct(probe, entrez)
slice
slice <- dplyr::slice
## GO term enrichment (biological process)
probe_to_entrez <- promise_expr %>% distinct(probe, entrez) %>%
group_by(probe) %>% slice(1) %>% ungroup()
phenotype_res
phenotype_res %>% inner_join(probe_to_entrez)
phenotype_res %>% inner_join(probe_to_entrez) %>% group_by(entrez) %>% top_n(1, -P.Value) %>% ungroup()
## select strongest probe for each entrez id
res_filtered <- phenotype_res %>% inner_join(probe_to_entrez) %>%
group_by(entrez) %>% top_n(1, -P.Value) %>% ungroup()
## create ranked list for enrichment
ranks <- setNames(res_filtered$t, as.character(res_filtered$entrez))
ranks
## GO term enrichment (biological process)
gse_go <- gseGO(
geneList = ranks,
OrgDb = org.Hs.eg.db,
ont = 'BP',
nPerm = 1e5,
minGSSize = 100,
maxGSSize = 500
)
ranks <- sort(ranks, decreasing = T)
## GO term enrichment (biological process)
gse_go <- gseGO(
geneList = ranks,
OrgDb = org.Hs.eg.db,
ont = 'BP',
nPerm = 1e5,
minGSSize = 100,
maxGSSize = 500
)
emapplot(gse_go)
readxl::read_excel(here('data/gene_expression/merloz-suarez_sigantures.xlsx'), sheet = 1)
openxlsx::read.xlsx(here('data/gene_expression/merloz-suarez_sigantures.xlsx'), sheet = 1)
readxl::read_excel(here('data/gene_expression/merloz-suarez_sigantures.xls'), sheet = 1)
readxl::read_excel(here('data/gene_expression/merloz-suarez_sigantures.xls'), sheet = 1, skip = 4)
readxl::read_excel(here('data/gene_expression/merloz-suarez_sigantures.xls'), sheet = 1, skip = 4) %>% .[,1:4] %>% gather(signature, symbol)
readxl::read_excel(here('data/gene_expression/merloz-suarez_sigantures.xls'), sheet = 1, skip = 4) %>% .[,1:4] %>% gather(signature, symbol) %>% drop_na()
readxl::read_excel(here('data/gene_expression/merloz-suarez_sigantures.xls'), sheet = 1, skip = 4) %>% .[,1:4] %>% gather(signature, symbol) %>% drop_na() %>%
readxl::read_excel(here('data/gene_expression/merloz-suarez_sigantures.xls'), sheet = 1, skip = 4) %>% .[,1:4] %>% gather(signature, symbol) %>% drop_na() %>% mutate(symbol = gsub('\\*', '', symbol))
## parse signatures and make list
intestinal_sig <- readxl::read_excel(here('data/gene_expression/merloz-suarez_sigantures.xls'),
sheet = 1, skip = 4) %>% .[,1:4] %>%
gather(signature, symbol) %>% drop_na() %>%
mutate(symbol = gsub('\\*', '', symbol))
intestinal_sig
phenotype_res
phenotype_res %>% group_by(symbol) %>% top_n(1, -P.Value) %>% ungroup()
## run gsea with clusterprofiler
res_symbol <- phenotype_res %>%
group_by(symbol) %>% top_n(1, -P.Value) %>% ungroup()
ranks_symbol <- setNames(res_symbol$t, res_symbol$symbol)
ranks_symbol
ranks_symbol <- sort(setNames(res_symbol$t, res_symbol$symbol), decreasing = T)
intestinal_sig
gse_sig <- GSEA(
geneList = ranks_symbol,
TERM2GENE = intestinal_sig,
nPerm = 1e5,
minGSSize = 1,
maxGSSize = 1000
)
gse_sig
gse_sig %>% as.data.frame()
## output as tibble
gse_sig_tbl <- as_tibble(gse_sig)
gse_sig_tbl
?GSEA
gse_sig <- GSEA(
geneList = ranks_symbol,
TERM2GENE = intestinal_sig,
nPerm = 1e5,
minGSSize = 1,
maxGSSize = 1000,
pvalueCutoff = 1
)
## output as tibble
gse_sig_tbl <- as_tibble(gse_sig)
gse_sig_tbl
promise_expr %>% filter(probe %in% phenotype_res$probe[1:4]) %>%
ggplot(aes(phenotype, expr)) +
stat_summary(fun = 'mean', color = '#cccccc', geom = 'bar') +
geom_point(aes(color = line)) +
facet_wrap(~symbol + probe)
phenotype_res
library(ReactomePA)
BiocManager::install('ReactomePA')
library(ReactomePA)
?gsePathway
## GO term enrichment (biological process)
gse_reactome <- gsePathway(
geneList = ranks,
organism = 'human',
ont = 'BP',
nPerm = 1e5,
minGSSize = 100,
maxGSSize = 500
)
## GO term enrichment (biological process)
gse_reactome <- gsePathway(
geneList = ranks,
organism = 'human',
nPerm = 1e5,
minGSSize = 100,
maxGSSize = 500
)
emapplot(gse_reactome)
gse_sig
gse_sig$ID
## lgr5 signature
gseaplot2(gse_sig, geneSetID = gse_sig$ID[2], title = gse_sig$ID[2])
library(enrichplot)
library(enrichplot)
## lgr5 signature
gseaplot2(gse_sig, geneSetID = gse_sig$ID[2], title = gse_sig$ID[2])
## lgr5 signature
gseaplot2(gse_sig, geneSetID = gse_sig$ID[2], title = gse_sig$ID[2]) +
geom_hline(yintercept = 0)
## lgr5 signature
gseaplot2(gse_sig, geneSetID = gse_sig$ID[2], title = gse_sig$ID[2]) +
geom_hline(yintercept = 0) +
scale_color_manual(values = '#4285f4')
## lgr5 signature
lgr5_barcode <-gseaplot2(gse_sig, geneSetID = gse_sig$ID[2], title = gse_sig$ID[2])
## prolifeation
prolif_barcode <- gseaplot2(gse_sig, geneSetID = gse_sig$ID[1], title = gse_sig$ID[1])
prolif_barcode
class(prolif_barcode)
prolif_barcode + theme(panel.grid = element_blank())
gseaplot2
pprolif_barcode[[1]]
prolif_barcode[[1]]
prolif_barcode
attr(prolif_barcode0
attr(prolif_barcode)
prolif_barcode$layers
prolif_barcode$plot_env
prolif_barcode$facet
## lgr5 signature
lgr5_barcode <- gseaplot2(gse_sig, geneSetID = gse_sig$ID[2], title = gse_sig$ID[2]) +
annotate('text', x=15000, y=0.3, label= "boat") +
## prolifeation
prolif_barcode <- gseaplot2(gse_sig, geneSetID = gse_sig$ID[1], title = gse_sig$ID[1])
## lgr5 signature
lgr5_barcode <- gseaplot2(gse_sig, geneSetID = gse_sig$ID[2], title = gse_sig$ID[2]) +
annotate('text', x=15000, y=0.3, label= "boat")
gse_sig_tbl
gse_sig_tbl$pvalue[2]
round(gse_sig_tbl$pvalue[2], 3)
## lgr5 signature
lgr5_barcode <- gseaplot2(
gse_sig, geneSetID = gse_sig$ID[2],
title = paste(gse_sig$ID[2], '(p =', round(gse_sig_tbl$pvalue[2], 3), '; NES =', gse_sig_tbl$NES[2]))
lgr5_barcode
## lgr5 signature
gseaplot2(
gse_sig, geneSetID = gse_sig$ID[2],
title = paste(gse_sig$ID[2], '(p =', round(gse_sig_tbl$pvalue[2], 3), '; NES =', round(gse_sig_tbl$NES[2], 2))
)
## prolifeation
gseaplot2(
gse_sig, geneSetID = gse_sig$ID[1],
title = paste(gse_sig$ID[1], '(p =', round(gse_sig_tbl$pvalue[1], 3), '; NES =', round(gse_sig_tbl$NES[1], 2))
)
## prolifeation
gseaplot2(
gse_sig, geneSetID = gse_sig$ID[1],
title = paste0(gse_sig$ID[1],
'(p = ', round(gse_sig_tbl$pvalue[1], 3),
'; NES = ', round(gse_sig_tbl$NES[1], 2), ')')
)
## lgr5 signature
gseaplot2(
gse_sig, geneSetID = gse_sig$ID[2],
title = paste0(gse_sig$ID[2],
' (p = ', round(gse_sig_tbl$pvalue[2], 3),
'; NES = ', round(gse_sig_tbl$NES[2], 2), ')')
)
## prolifeation
gseaplot2(
gse_sig, geneSetID = gse_sig$ID[1],
title = paste0(gse_sig$ID[1],
' (p = ', round(gse_sig_tbl$pvalue[1], 3),
'; NES = ', round(gse_sig_tbl$NES[1], 2), ')')
)
read_tsv('~/boutroslab/hd_crispr_library/pilot_screens/HAP1_HDCRISPR_B/read_counts/second_sequencing/Pilot_HDCRISPR_B.countsummary.txt')
counts <- read_tsv('~/boutroslab/hd_crispr_library/pilot_screens/HAP1_HDCRISPR_B/read_counts/second_sequencing/Pilot_HDCRISPR_B.countsummary.txt')
counts
counts$Reads
counts$Reads / 1e6
